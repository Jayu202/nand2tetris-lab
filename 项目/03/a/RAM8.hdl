// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by . If load==1, then 
 * the in value is loaded into the memory location specified by  
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true, sel=address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    And(a=load, b=a, out=a1);
    And(a=load, b=b, out=a2);
    And(a=load, b=c, out=a3);
    And(a=load, b=d, out=a4);
    And(a=load, b=e, out=a5);
    And(a=load, b=f, out=a6);
    And(a=load, b=g, out=a7);
    And(a=load, b=h, out=a8);
    
    Register(in=in, load=a1, out=r1);nmj
    Register(in=in, load=a2, out=r2);
    Register(in=in, load=a3, out=r3);
    Register(in=in, load=a4, out=r4);
    Register(in=in, load=a5, out=r5);
    Register(in=in, load=a6, out=r6);
    Register(in=in, load=a7, out=r7);
    Register(in=in, load=a8, out=r8);

    Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8, sel=address, out=out);
}