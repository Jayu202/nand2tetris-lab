// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    // Mux(a=in, b=false, sel=reset, out=r);
    // Bit(in=in, load=load, out=b);
    // Add16(a=1, b=in, out=a);
    // Mux4Way16(a=r, b=b, c=a, d=false, sel[0]=load,sel[1]=inc,sel[2]=reset, out=out);

    Or8Way(in[0]=load,in[1]=inc,in[2]=reset,in[3..7]=false, out=load1);

    Mux16(a=home, b=outPlus, sel=inc, out=reinc);
    Mux16(a=reinc, b=in, sel=load, out=reload);
    Mux16(a=reload, b=false, sel=reset, out=zero);

    Register(in=zero, load=load1, out=out,out=home);

    Inc16(in=home, out=outPlus);
}
